name: Docker Image CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  # SAST: Static Application Security Testing
  njsscan:
    runs-on: ubuntu-latest
    name: njsscan code scanning
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4.2.2
    - uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.12'
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@master
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif

  # Build Docker image
  build:
    name: Build Production Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v5
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build production Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/Dockerfile
          target: production
          tags: tech-challenge-app:production
          push: false
          load: true
          platforms: linux/amd64
          build-args: |
            NODE_ENV=production

      - name: Run Trivy image scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'tech-challenge-app:production'
          format: 'sarif'
          output: 'trivy-image.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1' # Fail build on critical/high vulnerabilities

      - name: Upload image scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-image.sarif'
          category: 'container-scan'

      - name: Run Trivy with table format for image report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'tech-challenge-app:production'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
